version: '3.8'

services:
  # MySQL dalam container (opsional, bisa dihapus kalau tetap pakai XAMPP)
  db:
    image: mysql:8
    container_name: mysql-db
    ports:
      - "3306:3306"   # ganti ke 3307 biar gak bentrok sama XAMPP
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: station_quality_control
      MYSQL_PASSWORD: root
    volumes:
      - db_data:/var/lib/mysql
      
  redis-cache:
    image: redis:latest
    container_name: redis-cache
    ports:
      - "6379:6379"

  server-app:
    # build: ./server
    build:
      context: ./server 
      dockerfile: Dockerfile
    container_name: server-app
    command: npm run dev
    ports:
      - "5000:5000"
    environment:
      # Redis (koneksi ke service redis-cache)
      REDIS_URL: redis://redis-cache:6379

      # API eksternal (swagger)
      API_BASE_URL: http://103.169.3.72:2107/api
      API_KEY: DEBUG-BYPASS-TOKEN-2107

      # Database MySQL
      # Jika pakai XAMPP MySQL di host:
      # DB_HOST: host.docker.internal
      DB_HOST: db
      # Jika pakai MySQL container di atas:
      # DB_HOST: db
      DB_USER: root
      DB_PASS: root
      DB_NAME: station_quality_control
    depends_on:
      - redis-cache
      - db
      # - db   # aktifkan kalau pakai MySQL container
    volumes:
      - ./server:/app
      - /app/node_modules

  client:
    build: ./client
    container_name: client-app
    ports:
      - "5173:5173"
    depends_on:
      - server-app
    volumes:
      - ./client:/app
      - /app/node_modules

volumes:
  db_data:
